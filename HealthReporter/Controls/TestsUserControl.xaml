<UserControl x:Class="HealthReporter.Controls.TestsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:HealthReporter.Controls"
             mc:Ignorable="d" Height="Auto" Width="Auto">
    <UserControl.Resources>
        <Image x:Key="Dustbin" Source="/Images/dustbin.png" Stretch="Uniform"/>
        <ControlTemplate x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Border x:Name="button" CornerRadius="100" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="button" Value="#FFC2C5C7"/>
                    <Setter Property="Background" TargetName="button" Value="#FFF0F0F0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" TargetName="button" Value="#FFC2C5C7"/>
                    <Setter Property="Background" TargetName="button" Value="#FFF0F0F0"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="button" Value="#FFC2C5C7"/>
                    <Setter Property="Background" TargetName="button" Value="#FFF0F0F0"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <LinearGradientBrush x:Key="WindowBackgroundBrush">
            <GradientStop Offset="0" Color="Silver"/>
            <GradientStop Offset="1" Color="Gray"/>
        </LinearGradientBrush>
        <x:Array x:Key="ComboBoxItems" Type="sys:String">
            <sys:String>Needs Improvement</sys:String>
            <sys:String>Fair</sys:String>
            <sys:String>Good</sys:String>
            <sys:String>Very Good</sys:String>
            <sys:String>Excellent</sys:String>
            <sys:String>Potential Risk</sys:String>
            <sys:String>Optimal</sys:String>
            <sys:String>Healthy</sys:String>
            <sys:String>Considerable Risk</sys:String>
            <sys:String>High Risk</sys:String>
            <sys:String>Unhealthy</sys:String>
            <sys:String>Healthy</sys:String>
        </x:Array>
        <x:Array x:Key="RatingColors" Type="Brush">
            <Brush>Red</Brush>
            <Brush>Orange</Brush>
            <Brush>Yellow</Brush>
            <Brush>Green</Brush>
            <Brush>Blue</Brush>
        </x:Array>
    </UserControl.Resources>
    <Border>

        <Grid Name="grid" Height="auto" Width="auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border BorderBrush="#FFF0F0F0" BorderThickness="2">
                <Grid Grid.Row="0" Background="White" HorizontalAlignment="Stretch" ShowGridLines="False" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" VerticalAlignment="Bottom">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Center">
                            <Button  Background="White" x:Name="btnShowClients" Content="Clients" Click="btn_Clients"   VerticalAlignment="Top" BorderBrush="LightGray" Height="20"   Grid.Column="2" HorizontalAlignment="Center" Width="90">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="10,0,0,10"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <Button BorderBrush="LightGray" Width="90" Background="White" x:Name="btnShowTests" Content="Tests" Click="btn_Tests"  VerticalAlignment="Top"  Height="20"  Grid.Column="2" HorizontalAlignment="Center" >
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="0,10,10,0"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </StackPanel>
                    </Border>
                    <TextBlock Foreground="DarkSlateGray" Grid.Row="1" x:Name="testTotal" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.75*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Row="1" Grid.Column="0"  Background="AliceBlue" />
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="10,10,10,5" Foreground="LightSlateGray" FontSize="14">Categories</TextBlock>
                    <DataGrid Focusable="True" Grid.Row="1" Grid.Column="0" x:Name="catsDataGrid" HeadersVisibility="None" SelectedValuePath="name"  SelectionMode="Single" CanUserSortColumns="False" IsReadOnly="True" GridLinesVisibility="None" AutoGenerateColumns="False" CellEditEnding="catsDataGrid_CellEditEnding" SelectionChanged="catsDataGrid_SelectionChanged" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="13" Grid.RowSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnTargetUpdated=True}" Width="*"/>
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <ContextMenu x:Key="GridContextMenu">
                                <ContextMenu.Items>
                                    <MenuItem Header="Delete" Click="MenuItem_DeleteCategory"/>
                                </ContextMenu.Items>
                            </ContextMenu>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                        <Setter Property="Background" Value="LightBlue" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGrid}">
                                <Style.Triggers>
                                    <Trigger Property="IsHitTestVisible" Value="False">
                                        <Setter Property="Foreground" Value="Gray" />
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Height" Value="23"/>
                                <Setter Property="Background" Value="AliceBlue"/>
                                <Setter Property="Margin" Value="15,0,0,0" />
                                <Setter Property="ContextMenu" Value="{StaticResource GridContextMenu}" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Grid>
                <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ResizeDirection="Columns"/>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBox  x:Name="search" Grid.Row="0" Height="20"  Margin="30,20,30,5" HorizontalAlignment="Stretch"  TextWrapping="Wrap" VerticalAlignment="Top" TextChanged="filterSearchBox">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </TextBox.Resources>
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <TextBlock Text="Search" Foreground="#696969"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None">
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <DataGrid Grid.Row="1" Focusable="True" Grid.Column="0" x:Name="testsDataGrid" SelectionMode="Single" IsReadOnly="True" SelectedValuePath="name" CanUserSortColumns="False" HeadersVisibility="None" AutoGenerateColumns="False"  SelectionChanged="testsDataGrid_SelectionChanged" Background="{x:Null}" GridLinesVisibility="None" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding name}" Width="*"/>
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                        <Setter Property="Background" Value="#eee9e9" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type DataGrid}">
                                <Style.Triggers>
                                    <Trigger Property="IsHitTestVisible" Value="False">
                                        <Setter Property="Foreground" Value="Gainsboro" />
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Height" Value="23"/>
                                <Setter Property="Margin" Value="15,0,0,0" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#eee9e9"/>
                                        <Setter Property="Margin" Value="15,0,0,0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Grid>
                <GridSplitter Grid.Column="3" Width="3" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" ResizeDirection="Columns" />
                <Grid Grid.Column="4"  x:Name="testDetailMain" ShowGridLines="False" Margin="0,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid Visibility="Hidden" Grid.Row="1" x:Name="testDetailDatagrid" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="0.7*"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="Text1" Margin="10" TextWrapping="Wrap" Text="Name" RenderTransformOrigin="0.469,-1.188" HorizontalAlignment="Right" Width="32" Grid.Column="0" Grid.Row="0" Height="16">
                            <TextBlock.Resources>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger 
                                            Binding ="{Binding ElementName=testName, Path=Text}" Value="">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger 
                                            Binding ="{Binding ElementName=testName, Path=Text}" Value="No Name">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Foreground" Value="#575C5C"/>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <TextBlock x:Name="Text2" Margin="0,10,10,0" TextWrapping="Wrap" Text="Units" RenderTransformOrigin="-0.48,0.627" HorizontalAlignment="Right" Width="30" Grid.Row="2" Height="16" VerticalAlignment="Bottom">
                            <TextBlock.Resources>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger 
                                            Binding ="{Binding ElementName=units, Path=Text}" Value="">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Foreground" Value="#575C5C"/>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <TextBlock x:Name="Text3" Margin="67,13,0,0" TextWrapping="Wrap" Text="Decimals" RenderTransformOrigin="0.146,1.25" Grid.Row="2" Grid.Column="1" Height="16" HorizontalAlignment="Left" Width="48" VerticalAlignment="Bottom"/>
                        <TextBox x:Name="testName" Height="23" TextWrapping="Wrap" Style="{StaticResource TextBoxStyle}" Text="{Binding name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated" HorizontalAlignment="Left" Width="230" LostFocus="textBox_LostFocus" GotFocus="testName_GotFocus" Margin="10" Grid.Column="1" Grid.Row="0"></TextBox>
                        <TextBox x:Name="units" Height="23" Margin="10,15,0,0" TextWrapping="Wrap" Style="{StaticResource TextBoxStyle}" Text="{Binding units, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated" LostFocus="textBox_LostFocus" RenderTransformOrigin="0.179,0.522" HorizontalAlignment="Left" Width="40" Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom"/>
                        <ComboBox x:Name="decimalsSelector" SelectedIndex="2" Margin="130,0,0,0"  SelectedValue="{Binding decimals, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated" RenderTransformOrigin="1.076,0.676" Background="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" BorderBrush="Black" Style="{StaticResource ComboBoxFlatStyle}" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Width="40" Height="22" VerticalAlignment="Bottom"/>
                        <TextBlock Margin="10" Foreground="#575C5C" TextWrapping="Wrap" RenderTransformOrigin="0.469,-1.188" HorizontalAlignment="Right" Width="40" Text="Weight" Grid.Row="1" Height="16"/>
                        <TextBox x:Name="weight" Height="23" Margin="10,15,0,0" TextWrapping="Wrap" Style="{StaticResource TextBoxStyle}" Text="{Binding weight, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated" LostFocus="textBox_LostFocus" RenderTransformOrigin="0.179,0.522" HorizontalAlignment="Left" Width="40" Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom"/>

                        <Grid Grid.Row="4" Grid.RowSpan="3" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Foreground="#575C5C" HorizontalAlignment="Right" TextWrapping="Wrap" RenderTransformOrigin="0.469,-1.188" Width="48" Height="16" Margin="0,0,10,25" Grid.Row="1" VerticalAlignment="Bottom"><Run Text="Formula"/><LineBreak/><Run/></TextBlock>
                            <TextBlock Margin="44,30,0,0" x:Name="ratingLabel" Foreground="#575C5C" TextWrapping="Wrap" RenderTransformOrigin="0.469,-1.188" Text="Ratings" Height="19" VerticalAlignment="Top" HorizontalAlignment="Left" Width="42"/>
                            <TextBlock x:Name="tip" Height="15" Text="?" Margin="88,30,4,4" ToolTip="" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <TextBlock.Resources>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <Trigger Property="TextBlock.IsMouseOver" Value="True">
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Resources>
                            </TextBlock>
                            <TabControl Name="GenderTab" Grid.Column="1" Grid.RowSpan="2" Margin="10,0,10,10" PreviewMouseDown="GenderTab_PreviewMouseDown" BorderThickness="1" FocusVisualStyle="{x:Null}">
                                <TabControl.Resources>
                                    <Style TargetType="TabPanel">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                    </Style>
                                </TabControl.Resources>
                                <TabItem Header="Men"  Style="{DynamicResource MenTabItemStyle}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="39*"/>
                                            <ColumnDefinition Width="29*"/>
                                            <ColumnDefinition Width="30*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="8*" />
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <TabControl Name="MenAgesTab" SelectionChanged="MenAgesTab_SelectionChanged" PreviewMouseDown="MenAgesTab_PreviewMouseDown" SelectedIndex="0" ItemContainerStyle="{StaticResource AgeGroupTabItemStyle}" BorderThickness="0" SelectedValuePath="interval.rating.age" Grid.ColumnSpan="3">
                                            <TabControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock VerticalAlignment="Top" Text="{Binding interval.interval}"></TextBlock>
                                                </DataTemplate>
                                            </TabControl.ItemTemplate>
                                            <TabControl.ContentTemplate>
                                                <DataTemplate>
                                                    <DataGrid x:Name="menRatingsDatagrid" Style="{DynamicResource DataGridStyle}" GotFocus="menRatingsDatagrid_GotFocus" SelectionChanged="menRatingsDatagrid_SelectionChanged" HorizontalGridLinesBrush="LightBlue" VerticalGridLinesBrush="LightBlue" SelectionUnit="FullRow" SelectionMode="Single" RowDetailsVisibilityMode="Collapsed" PreviewKeyDown="KeyDownHandler" RowEditEnding="RatingsDataGrid_RowEditEnding" ItemsSource = "{Binding Path=rowitems}" IsReadOnly="False" HeadersVisibility="Column" AutoGenerateColumns="False" Background="{x:Null}" BorderBrush="{x:Null}" RowHeight="25">
                                                        <DataGrid.Columns>
                                                            <DataGridTextColumn Header="Score" Binding="{Binding normM, UpdateSourceTrigger = LostFocus}"  Width="0.5*" CanUserSort="False"/>
                                                            <DataGridTemplateColumn Header="Rating">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox Name="cmbColors" SelectionChanged="ratingGridCombos_SelectionChanged" ItemsSource="{StaticResource RatingColors}" IsEnabled="False" Style="{StaticResource ComboBoxFlatStyle}" SelectedItem="{Binding Path=rating}" >
                                                                            <ComboBox.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <StackPanel Orientation="Horizontal">
                                                                                        <Rectangle Fill="{Binding}" Width="16" Height="16" Margin="0,2,5,2" />
                                                                                    </StackPanel>
                                                                                </DataTemplate>
                                                                            </ComboBox.ItemTemplate>
                                                                        </ComboBox>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox Name="cmbColors" SelectionChanged="ratingGridCombos_SelectionChanged" ItemsSource="{StaticResource RatingColors}" IsDropDownOpen="True" Style="{StaticResource ComboBoxFlatStyle}" SelectedItem="{Binding Path=rating, Mode=TwoWay, UpdateSourceTrigger =PropertyChanged}" >
                                                                            <ComboBox.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <StackPanel Orientation="Horizontal">
                                                                                        <Rectangle Fill="{Binding}" Width="16" Height="16" Margin="0,2,5,2" />
                                                                                    </StackPanel>
                                                                                </DataTemplate>
                                                                            </ComboBox.ItemTemplate>
                                                                        </ComboBox>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellEditingTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn Header="Meaning">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox ItemsSource="{StaticResource ComboBoxItems}" SelectionChanged="ratingGridCombos_SelectionChanged" IsEnabled="False" Style="{StaticResource ComboBoxFlatStyle}" SelectedItem="{Binding name}" />
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox ItemsSource="{StaticResource ComboBoxItems}" IsDropDownOpen="True" Style="{StaticResource ComboBoxFlatStyle}" SelectedItem="{Binding name, UpdateSourceTrigger=PropertyChanged}" />
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellEditingTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTextColumn Header="Description" Binding="{Binding interpretation, UpdateSourceTrigger = PropertyChanged}"  Width="5*" CanUserSort="False"/>
                                                        </DataGrid.Columns>
                                                        <DataGrid.RowDetailsTemplate>
                                                            <DataTemplate>
                                                                <TextBox Height="80"  Width="390" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding interpretation,  UpdateSourceTrigger = PropertyChanged}"/>
                                                            </DataTemplate>
                                                        </DataGrid.RowDetailsTemplate>
                                                        <DataGrid.Resources>
                                                            <Style TargetType="{x:Type DataGridCell}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                                        <Setter Property="Background" Value="White" />
                                                                        <Setter Property="Foreground" Value="Black" />
                                                                        <Setter Property="BorderBrush" Value="Black" />
                                                                        <Setter Property="BorderThickness" Value="0.7" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </DataGrid.Resources>
                                                    </DataGrid>
                                                </DataTemplate>
                                            </TabControl.ContentTemplate>
                                        </TabControl>
                                        <Button Grid.ColumnSpan="3" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#575C5C" x:Name="addRatingsM" Padding="5" Background="White" BorderThickness="0" Click="btn_AddNewAge">
                                            <Button.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="0.8" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Resources>
                                            + Add ratings
                                        </Button>
                                        <TextBox Grid.Row="2" x:Name="FormulaTextM" Style="{StaticResource TextBoxStyle}" Margin="10,0,10,5" TextWrapping="Wrap" Text="{Binding formulaM, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated" Grid.ColumnSpan="3"/>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Women" Style="{DynamicResource WomenTabItemStyle}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="8*" />
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <TabControl Name="WomenAgesTab" SelectionChanged="MenAgesTab_SelectionChanged" ItemContainerStyle="{StaticResource AgeGroupTabItemStyle}" BorderThickness="0" SelectedIndex="{Binding ElementName=MenAgesTab, Path=SelectedIndex}"  SelectedValue="{Binding Path=rowitems.age}" SelectedValuePath="interval.rating.age">
                                            <TabControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock VerticalAlignment="Top" Text="{Binding interval.interval}"></TextBlock>
                                                </DataTemplate>
                                            </TabControl.ItemTemplate>
                                            <TabControl.ContentTemplate>
                                                <DataTemplate>
                                                    <DataGrid x:Name="WomenRatingsDatagrid" GotFocus="menRatingsDatagrid_GotFocus" Style="{DynamicResource DataGridStyle}" HorizontalGridLinesBrush="LightBlue" VerticalGridLinesBrush="LightBlue" SelectionMode="Single" RowDetailsVisibilityMode="Collapsed" IsReadOnly="False" RowEditEnding="RatingsDataGrid_RowEditEnding" ItemsSource = "{Binding Path=rowitems}"  HeadersVisibility="Column" AutoGenerateColumns="False" Background="{x:Null}" BorderBrush="{x:Null}" RowHeight="25">
                                                        <DataGrid.Columns>
                                                            <DataGridTextColumn Header="Score" Binding="{Binding normF, UpdateSourceTrigger = LostFocus}"  Width="0.5*" CanUserSort="False"/>
                                                            <DataGridTemplateColumn Header="Rating">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox Name="cmbColors" ItemsSource="{StaticResource RatingColors}" IsEnabled="False" Style="{StaticResource ComboBoxFlatStyle}" SelectedItem="{Binding rating}" >
                                                                            <ComboBox.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <StackPanel Orientation="Horizontal">
                                                                                        <Rectangle Fill="{Binding}" Width="16" Height="16" Margin="0,2,5,2" />
                                                                                    </StackPanel>
                                                                                </DataTemplate>
                                                                            </ComboBox.ItemTemplate>
                                                                        </ComboBox>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox Name="cmbColors" ItemsSource="{StaticResource RatingColors}" IsDropDownOpen="True" Style="{StaticResource ComboBoxFlatStyle}" SelectedItem="{Binding Path=rating, Mode=TwoWay, UpdateSourceTrigger =PropertyChanged}" >
                                                                            <ComboBox.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <StackPanel Orientation="Horizontal">
                                                                                        <Rectangle Fill="{Binding}" Width="16" Height="16" Margin="0,2,5,2" />
                                                                                    </StackPanel>
                                                                                </DataTemplate>
                                                                            </ComboBox.ItemTemplate>
                                                                        </ComboBox>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellEditingTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn Header="Meaning">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox ItemsSource="{StaticResource ComboBoxItems}" Style="{StaticResource ComboBoxFlatStyle}" IsEnabled="False" SelectedItem="{Binding name,  NotifyOnTargetUpdated=True}" />
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                                <DataGridTemplateColumn.CellEditingTemplate>
                                                                    <DataTemplate>
                                                                        <ComboBox ItemsSource="{StaticResource ComboBoxItems}" IsDropDownOpen="True" Style="{StaticResource ComboBoxFlatStyle}" SelectedItem="{Binding name, UpdateSourceTrigger=PropertyChanged}" />
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellEditingTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTextColumn Header="Description" Binding="{Binding interpretation, UpdateSourceTrigger = PropertyChanged}"  Width="5*" CanUserSort="False"/>
                                                        </DataGrid.Columns>
                                                        <DataGrid.RowDetailsTemplate>
                                                            <DataTemplate>
                                                                <TextBox Height="80"  Width="390" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding interpretation,  UpdateSourceTrigger = PropertyChanged}"/>
                                                            </DataTemplate>
                                                        </DataGrid.RowDetailsTemplate>
                                                        <DataGrid.Resources>
                                                            <Style TargetType="{x:Type DataGridCell}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                                        <Setter Property="Background" Value="White" />
                                                                        <Setter Property="Foreground" Value="Black" />
                                                                        <Setter Property="BorderBrush" Value="Black" />
                                                                        <Setter Property="BorderThickness" Value="0.7" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </DataGrid.Resources>
                                                    </DataGrid>
                                                </DataTemplate>
                                            </TabControl.ContentTemplate>
                                        </TabControl>
                                        <Button Grid.ColumnSpan="3" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#575C5C" x:Name="addRatingsF" Padding="5" Background="White" BorderThickness="0" Click="btn_AddNewAge">
                                            <Button.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Opacity" Value="0.8" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Resources>
                                            + Add ratings
                                        </Button>
                                        <TextBox Grid.Row="2" x:Name="FormulaTextF" Style="{StaticResource TextBoxStyle}" Margin="10,0,10,5" TextWrapping="Wrap" Text="{Binding formulaF, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated" Grid.Column="2"/>
                                    </Grid>
                                </TabItem>
                            </TabControl>

                        </Grid>
                        <TextBlock HorizontalAlignment="Right" Foreground="#616666 " Margin="0,10,10,10" TextWrapping="Wrap" RenderTransformOrigin="0.469,-1.188" Width="63" Grid.Row="7" Height="19"><Run Text="Descriptio"/><Run Text="n"/><LineBreak/><Run/></TextBlock>
                        <TextBox x:Name="TestDescriptionText" Margin="10" TextWrapping="Wrap" Text="{Binding description, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated" Grid.Row="7" Grid.Column="1"/>

                    </Grid>
                    <Button Grid.Row="2" HorizontalAlignment="Left" x:Name="addStuffButton" ContextMenuService.IsEnabled="False"  Content="+" Margin="20,20,20,20" VerticalAlignment="Bottom" Click="btn_AddStuff" Height="30" BorderBrush="#FFA2B2BD"  Background="White"  FontSize="16"  Width="30" RenderTransformOrigin="0.867,-0.133">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </Button.Resources>
                        <Button.ContextMenu>
                            <ContextMenu >
                                <MenuItem Header="New test" Click="btn_AddNewTest"/>
                                <MenuItem Header="New category" Click="btn_AddNewCategory"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>

                    <Button x:Name="deleteTestButton" Content="{StaticResource Dustbin}" Padding="6" Margin="10,10,20,10" Width="30" Height="30" Click="btn_DeleteTest" Background="White" RenderTransformOrigin="-2.595,1" Grid.Row="2" HorizontalAlignment="Right" >
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </Button.Resources>
                        <Button.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger 
                     Binding ="{Binding ElementName=testsDataGrid, Path=SelectedIndex}" Value="-1">
                                        <Setter Property="Button.Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</UserControl>
